@page "/add-note"
@using Notatnik.Server
@using Notatnik.Shared
@inject HttpClient Http
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]
@*<RadzenButton Click=@Clear Text="Add new note" ButtonStyle="ButtonStyle.Dark" />*@

<div class="container-fluid">
    <div class="row px-3">
        <div class="col-md-9 p-3">
            <EditForm Model="noteDto" OnValidSubmit="OnSubmit">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="title">Podaj tytul notatki</label>
                    <InputText id="title" @bind-Value="noteDto.Title" class="form-control" />
                    <ValidationMessage For="@(() => noteDto.Title)" />
                </div>
                <div class="mb-3">
                    <label for="public">Chcesz zeby notatka byla publiczna?</label>
                    <InputCheckbox id="public" @bind-Value="noteDto.Public" />
                    <ValidationMessage For="@(() => noteDto.Public)" />
                </div>
                <label for="title">Podaj ciało notatki</label>
                <RadzenHtmlEditor @bind-Value=@noteDto.Body style="height: 500px; margin-bottom: 1rem;">
                    <RadzenHtmlEditorUndo />
                    <RadzenHtmlEditorRedo />
                    <RadzenHtmlEditorSeparator />
                    <RadzenHtmlEditorBold />
                    <RadzenHtmlEditorItalic />
                    <RadzenHtmlEditorUnderline />
                    <RadzenHtmlEditorStrikeThrough />
                    <RadzenHtmlEditorSeparator />
                    <RadzenHtmlEditorColor />
                    <RadzenHtmlEditorBackground />
                    <RadzenHtmlEditorRemoveFormat />
                </RadzenHtmlEditor>
                <button type="submit" class="btn btn-primary">Dodaj notatke</button>
                <div class="text-danger">
                    <span>@errorMessage</span>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    NoteDto noteDto = new NoteDto
        {
            Secure = false,
            Public = false,
            Password = "dummydefaultpass"
        };
    private string errorMessage = string.Empty;

    async Task OnSubmit()
    {

        var result = await Http.PostAsJsonAsync($"https://localhost:7288/api/User/create-user-note", noteDto);

        noteDto = new NoteDto
            {
                Secure = false,
                Public = false,
                Password = "dummydefaultpass"
            };

        if (!result.IsSuccessStatusCode)
        {
            errorMessage = await result.Content.ReadAsStringAsync();
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }

        NavManager.NavigateTo($"/notes");


    }




}
